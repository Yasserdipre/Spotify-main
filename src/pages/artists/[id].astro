---

import TableComponent from "@/components/SongTable"
import Layout from "../../layouts/Layout.astro"
import { CardPlayButton } from "@/components/CardPlayButton";
const { id } = Astro.params
import {db, Albumns, Songs, Artists, ArtistsBiblioteca, eq, and, Users} from 'astro:db';
import { like } from "astro:db"
import { getSession } from "auth-astro/server";
const session = await getSession(Astro.request);
import FollowArtistsButton from "@/components/FollowArtistsButton";
const userId = await db.select({id : Users.id}).from(Users).where(and(eq(Users.name, session?.user.name), eq(Users.email, session?.user.email)))
let state;
const artistsBiblioteca = await db.select().from(ArtistsBiblioteca).where(and(eq(ArtistsBiblioteca.artistId, id), eq(ArtistsBiblioteca.userId, userId[0].id)))
if(artistsBiblioteca.length > 0){
  state = false
}
else(
  state = true
)
const artists = await db.select().from(Artists).where(like(Artists.id, id))
const albums = await db.select().from(Albumns).where(like(Albumns.artistId, id))
const songs = await db.select().from(Songs).where(like(Songs.albumId, albums[0].id));
---

<Layout title="Spotify Clone">
  <div
    id="playlist-container"
    class="relative flex flex-col h-full bg-zinc-900 overflow-x-hidden"
    transition:name=`playlist ${id} box`
  >
    <!-- <PageHeader /> -->

    <header class="flex flex-row gap-8">
      <picture class=`aspect-square w-full h-80 flex-none bg-no-repeat` transition:name=`playlist ${albums[0]?.id} image` style=`background-image: url('${artists[0]?.image}'); background-size: 100%; background-position: center;"`>
        <div class="flex flex-col justify-between mt-40 ml-8">
            <div>
              <h1 class="font-bold text-8xl block text-white">
                {artists[0]?.name}
                <span transition:name=`playlist ${albums[0]?.id} title`></span>
              </h1>
            </div>
    
            <div class="flex-1 flex items-end">
              <div class="text-sm text-gray-300 font-normal">
                <div transition:name=`playlist ${albums[0]?.id} artists`>
                  <span>{artists[0]?.listeners} oyentes mensuales</span>
                </div>
              </div>
            </div>
          </div>
      </picture>

      
    </header>

    <div class="pl-6 pt-6">
      <CardPlayButton client:load id={id} size="large" followButt="seguir"/>
      <FollowArtistsButton state={state} session={session}  client:load/>
    </div>

    <div class="relative z-10 px-6 pt-10"></div>

    <div
      class="absolute inset-0 bg-gradient-to-t from-zinc-900 via-zinc-900/80 -z-[1]"
    >
    </div>

    <section class="p-6">
      <TableComponent client:load songs={songs}/>
    </section>
  </div>
</Layout>
